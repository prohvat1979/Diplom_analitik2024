# -*- coding: utf-8 -*-
"""Untitled28.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NMKYcnsj4AlNQzFM3CRONVFNfROmoigK

Код для формирования гипотез
"""

import numpy as np
import pandas as pd
from scipy import stats

# Установка параметров для генерации данных
np.random.seed(42)
num_patients = 100  # Количество пациентов
num_staff = 50  # Количество сотрудников

# 1. Время обработки запросов пациентов (в минутах) до и после внедрения DISC
time_before_DISC = np.random.normal(loc=20, scale=5, size=num_patients)
time_after_DISC = np.random.normal(loc=15, scale=5, size=num_patients)

# 2. Удовлетворенность пациентов (оценка от 1 до 100) до и после внедрения DISC
satisfaction_before_DISC = np.random.normal(loc=70, scale=10, size=num_patients)
satisfaction_after_DISC = np.random.normal(loc=75, scale=10, size=num_patients)

# 3. Производительность сотрудников (оценка от 1 до 100) до и после внедрения DISC
performance_before_DISC = np.random.normal(loc=65, scale=10, size=num_staff)
performance_after_DISC = np.random.normal(loc=80, scale=10, size=num_staff)

# 4. Эффективность лечения (в процентах) до и после внедрения DISC
treatment_success_before = np.random.normal(loc=80, scale=5, size=num_patients)
treatment_success_after = np.random.normal(loc=85, scale=5, size=num_patients)

# 5. Нагрузка на персонал (количество пациентов на сотрудника) до и после внедрения DISC
workload_before = np.random.normal(loc=20, scale=3, size=num_staff)
workload_after = np.random.normal(loc=15, scale=3, size=num_staff)

# 6. Вовлеченность пациентов в процесс лечения (оценка от 1 до 100) до и после внедрения DISC
engagement_before = np.random.normal(loc=60, scale=15, size=num_patients)
engagement_after = np.random.normal(loc=75, scale=15, size=num_patients)

# Создаем DataFrame для анализа
data = pd.DataFrame({
    'Patient_ID': range(1, num_patients + 1),
    'Time_Before_DISC': time_before_DISC,
    'Time_After_DISC': time_after_DISC,
    'Satisfaction_Before_DISC': satisfaction_before_DISC,
    'Satisfaction_After_DISC': satisfaction_after_DISC,
    'Treatment_Success_Before': treatment_success_before,
    'Treatment_Success_After': treatment_success_after,
    'Engagement_Before': engagement_before,
    'Engagement_After': engagement_after
})

# Данные о сотрудниках
staff_data = pd.DataFrame({
    'Staff_ID': range(1, num_staff + 1),
    'Performance_Before_DISC': performance_before_DISC,
    'Performance_After_DISC': performance_after_DISC,
    'Workload_Before': workload_before,
    'Workload_After': workload_after
})

# 7. Формирование и проверка гипотез

# Гипотеза 1: Время обработки запросов пациентов уменьшится после внедрения DISC
t_stat_time, p_val_time = stats.ttest_ind(data['Time_Before_DISC'], data['Time_After_DISC'])

# Гипотеза 2: Удовлетворенность пациентов увеличится после внедрения DISC
t_stat_satisfaction, p_val_satisfaction = stats.ttest_ind(data['Satisfaction_Before_DISC'], data['Satisfaction_After_DISC'])

# Гипотеза 3: Производительность сотрудников повысится после внедрения DISC
t_stat_performance, p_val_performance = stats.ttest_ind(staff_data['Performance_Before_DISC'], staff_data['Performance_After_DISC'])

# Гипотеза 4: Эффективность лечения повысится после внедрения DISC
t_stat_treatment, p_val_treatment = stats.ttest_ind(data['Treatment_Success_Before'], data['Treatment_Success_After'])

# Гипотеза 5: Нагрузка на персонал снизится после внедрения DISC
t_stat_workload, p_val_workload = stats.ttest_ind(staff_data['Workload_Before'], staff_data['Workload_After'])

# Гипотеза 6: Вовлеченность пациентов в процесс лечения увеличится после внедрения DISC
t_stat_engagement, p_val_engagement = stats.ttest_ind(data['Engagement_Before'], data['Engagement_After'])

# Оценка результатов и формулировка гипотез
hypotheses = [
    ("Снижение времени обработки запросов пациентов", p_val_time < 0.05),
    ("Увеличение удовлетворенности пациентов", p_val_satisfaction < 0.05),
    ("Повышение производительности сотрудников", p_val_performance < 0.05),
    ("Повышение эффективности лечения", p_val_treatment < 0.05),
    ("Снижение нагрузки на медицинский персонал", p_val_workload < 0.05),
    ("Повышение вовлеченности пациентов в процесс лечения", p_val_engagement < 0.05)
]

print("Предварительные гипотезы:")
for hypothesis, result in hypotheses:
    if result:
        print(f"- Гипотеза подтверждена: {hypothesis}")
    else:
        print(f"- Гипотеза не подтверждена: {hypothesis}")